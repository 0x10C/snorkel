# Travis CI config for Snorkel, a training data creation and management
# system focused on information extraction

dist: trusty
sudo: false  # to use container-based infra, see: http://docs.travis-ci.com/user/migrating-from-legacy/
language: generic
env:
  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.6
jdk:
  - oraclejdk8

cache:
  directories:
    - download
    - parser                         # to avoid repetitively downloading CoreNLP

addons:
  apt:
    packages:
    # CoreNLP needs Java 8
    - oracle-java8-installer

# Following trick is necessary to get a binary distribution of numpy, scipy, etc. which takes too long to build every time
# See: http://stackoverflow.com/q/30588634
# See: https://github.com/Theano/Theano/blob/master/.travis.yml (for caching)
# See: http://conda.pydata.org/docs/travis.html
before_install:
  - travis_retry
    wget https://repo.continuum.io/miniconda/Miniconda3-4.5.1-Linux-x86_64.sh
    --output-document=miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source $HOME/miniconda/etc/profile.d/conda.sh
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda info --all

  # Make sure Java 8 is used
  - export PATH="/usr/lib/jvm/java-8-oracle/bin:$PATH"
  - export JAVA_HOME=/usr/lib/jvm/java-8-oracle
  - java -version

  # Set environment variables
  - source set_env.sh

install:
  - sed --in-place 's/- python/- python='"$PYTHON_VERSION"'/' environment.yml
  - conda env create --quiet --file=environment.yml
  - conda activate snorkel

  # Install all remaining dependencies as per our README
  - pip install .
  - test -e parser/corenlp.sh || ./install-parser.sh

script:

  # Run test modules
  - python test/learning/test_gen_learning.py
  - python test/learning/test_supervised.py
  - python test/learning/test_categorical.py
  - runipy test/learning/test_TF_notebook.ipynb
  - runipy test/learning/test_parallel_grid_search.ipynb

  # Runs intro tutorial notebooks
  - cd tutorials
  - runipy intro/Intro_Tutorial_1.ipynb
  - runipy intro/Intro_Tutorial_2.ipynb
  - runipy intro/Intro_Tutorial_3.ipynb

  # Run advanced notebooks
  - runipy advanced/Categorical_Classes.ipynb
  - runipy advanced/Structure_Learning.ipynb

  # Run CDR tutorials
  - runipy cdr/CDR_Tutorial_1.ipynb
  - runipy cdr/CDR_Tutorial_2.ipynb
  - runipy cdr/CDR_Tutorial_3.ipynb

  # TODO check outputs, upload results, etc.
  # for more ideas, see: https://github.com/rossant/ipycache/issues/7

after_success:
  - killall java

after_failure:
  - killall java
